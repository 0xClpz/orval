/**
 * Generated by orval v6.0.0 üç∫
 * Do not edit manually.
 * Petstore API
 * Petstore API
 * OpenAPI spec version: 1.0.0
 */
import { useQuery, UseQueryOptions } from 'react-query';
import { customInstance } from '../mutator/custom-instance';
import type { GetPets201Item } from '../schemas';

type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any;

export const getPets = () => {
  return customInstance<GetPets201Item[]>({ url: `/pets`, method: 'get' });
};

export const getGetPetsQueryKey = () => [`/pets`];

export const useGetPets = <
  TData = AsyncReturnType<typeof getPets>,
  TError = unknown
>(options?: {
  query?: UseQueryOptions<AsyncReturnType<typeof getPets>, TError, TData>;
}) => {
  const { query: queryOptions } = options || {};

  const queryKey = queryOptions?.queryKey ?? getGetPetsQueryKey();
  const queryFn = () => getPets();

  const query = useQuery<AsyncReturnType<typeof queryFn>, TError, TData>(
    queryKey,
    queryFn,
    queryOptions
  );

  return {
    queryKey,
    ...query,
  };
};
