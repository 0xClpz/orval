/*
 * Generated by orval v2.5.9 🍺
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import faker from 'faker';
import { SwaggerPetstoreApi } from './petstoreFromFileSpecWithTransformer.definition';
import { ListPetsParams, Pet, Pets } from '../model';

export const getSwaggerPetstoreApiMock = (): SwaggerPetstoreApi => ({
  listPets(params?: ListPetsParams, version?: number): AxiosPromise<Pets> {
    return Promise.resolve(
      [...Array(faker.random.number({ min: 1, max: 10 }))].map(() => ({
        id: (() => faker.random.number({ min: 1, max: 99999 }))(),
        name: (() => faker.name.lastName())(),
        tag: (() => faker.name.lastName())(),
      })),
    ).then((data) => ({ data })) as AxiosPromise<Pets>;
  },
  createPets(version?: number): AxiosPromise<unknown> {
    return Promise.resolve(undefined).then((data) => ({
      data,
    })) as AxiosPromise<unknown>;
  },
  showPetById(
    petId: string,
    testId: string,
    version?: number,
  ): AxiosPromise<Pet> {
    return Promise.resolve(
      (() => ({
        id: faker.random.number({ min: 1, max: 99 }),
        name: faker.name.firstName(),
        tag: faker.helpers.randomize([faker.random.word(), undefined]),
      }))(),
    ).then((data) => ({ data })) as AxiosPromise<Pet>;
  },
});
