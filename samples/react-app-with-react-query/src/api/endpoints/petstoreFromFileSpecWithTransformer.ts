/*
 * Generated by orval v3.2.3 üç∫
 * Do not edit manually.
 * Swagger Petstore
 * OpenAPI spec version: 1.0.0
 */
import axios from 'axios';
import {
  MutationConfig,
  QueryConfig,
  useMutation,
  useQuery,
} from 'react-query';
import { CreatePetsBody, ListPetsParams, Pet, Pets } from '../model';
import listPetsMutator from './../../../src/api/mutator/custom-instance';

type AsyncReturnType<T extends (...args: any) => Promise<any>> = T extends (
  ...args: any
) => Promise<infer R>
  ? R
  : any;

export const listPets = (params?: ListPetsParams, version: number = 1) => {
  return listPetsMutator<Pets>({
    url: `/v${version}/pets`,
    method: 'get',
    params,
  });
};

export const useListPets = <Error = unknown>(
  params?: ListPetsParams,
  version: number = 1,
  queryConfig?: QueryConfig<AsyncReturnType<typeof listPets>, Error>,
) => {
  return useQuery<AsyncReturnType<typeof listPets>, Error>(
    [`/v${version}/pets`, params],
    () => listPets(params, version),
    { enabled: version, ...queryConfig },
  );
};
export const createPets = (
  createPetsBody: CreatePetsBody,
  version: number = 1,
) => {
  return axios.post<unknown>(`/v${version}/pets`, createPetsBody);
};

export const useCreatePets = <Error = unknown>(
  mutationConfig?: MutationConfig<
    AsyncReturnType<typeof createPets>,
    Error,
    { data: CreatePetsBody; version?: number }
  >,
) => {
  return useMutation<
    AsyncReturnType<typeof createPets>,
    Error,
    { data: CreatePetsBody; version?: number }
  >((props) => {
    const { data, version } = props || {};

    return createPets(data, version);
  }, mutationConfig);
};
export const showPetById = (petId: string, version: number = 1) => {
  return axios.get<Pet>(`/v${version}/pets/${petId}`);
};

export const useShowPetById = <Error = unknown>(
  petId: string,
  version: number = 1,
  queryConfig?: QueryConfig<AsyncReturnType<typeof showPetById>, Error>,
) => {
  return useQuery<AsyncReturnType<typeof showPetById>, Error>(
    [`/v${version}/pets/${petId}`],
    () => showPetById(petId, version),
    { enabled: version && petId, ...queryConfig },
  );
};
